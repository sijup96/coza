<%- include('./layouts/userLayout/header.ejs') %>
<title>Checkout</title>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	
<style>
		.cross {
			position: relative;
			display: inline-block;
		}

		.cross::after {
			content: '';
			width: 100%;
			position: absolute;
			right: 0;
			top: 40%;
			border-bottom: 2px solid red;
			/* Specify the thickness and color of the line */
		}

		.card {
			border: 1px solid #ddd;
			border-radius: 5px;
			padding: 10px;
			cursor: pointer;
		}

		.card:hover {
			box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
		}

		.addressRadio {
			display: none;
		}

		.addressRadio:checked+label .card {
			border-color: #007bff;
			box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
			background-color: rgba(137, 149, 171, 0.306);
		}


		@media (max-width: 991px) {
			.order-lg-first {
				order: -1;
			}
		}

		.address-box {
			border: 1px solid #ccc;
			padding: 10px;
			margin-bottom: 10px;
			cursor: pointer;
		}

		.address-box:hover {
			background-color: #f0f0f0;
		}

		/* Form styles */
		.form-group {
			margin-bottom: 15px;
		}

		.form-row {
			margin-top: 15px;
		}

		.form-group label {
			font-weight: bold;
		}

		.form-control {
			width: 100%;
			padding: 8px;
			border: 1px solid #ccc;
			border-radius: 4px;
		}

		.btn-primary {
			background-color: #007bff;
			color: #fff;
			border: none;
			padding: 8px 16px;
			border-radius: 4px;
			cursor: pointer;
		}

		.btn-primary:hover {
			background-color: #0056b3;
		}

		.expandable {
			border: 1px solid #ccc;
			margin-bottom: 20px;
		}

		.expand-btn {
			background-color: #f0f0f0;
			border: none;
			padding: 10px;
			cursor: pointer;
		}

		.content {
			display: none;
			padding: 10px;
		}

		.address-container {
			height: 300px;
			/* Set a fixed height for the container */
			overflow-y: auto;
			/* Enable vertical scrolling */
		}

		.flex-list {
			display: flex;
			flex-direction: column;
			/* Display items vertically */
			padding: 0;
			/* Remove default padding */
		}

		.flex-list li {
			margin-bottom: 10px;
			/* Add spacing between items */
		}

	</style>
	<%
	let subtotal = 0;
	let discount = 0;
	%>
	
	<div id="reload">
		<!-- Shoping Cart -->
		<form class="bg0 p-t-75 p-b-85">

			<div class="container">
				<!-- breadcrumb -->
				<div class="container">
					<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg">
						<a href="/" class="stext-109 cl8 hov-cl1 trans-04">
							Home
							<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
						</a>
						<a href="/cart" class="stext-109 cl8 hov-cl1 trans-04">
							Cart
							<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
						</a>

						<span class="stext-109 cl4">
							Checkout
						</span>
					</div>
				</div>
				<br>
				<div style="text-align: center; padding: 2em;">
					<span>
						<h1>Checkout</h1>
					</span>
				</div>
				<div class="row">

					<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
						<div class="m-l-25 m-r--38 m-lr-0-xl">
							<div class="wrap-table-shopping-cart">
								<table class="table-shopping-cart">
									<tr class="table_head">
										<th class="column-1">Product</th>
										<th class="column-2"></th>
										<th class="column-3">Price</th>
										<th class="column-4">Quantity</th>
										<th class="column-6">Discount</th>
										<th class="column-5">Total</th>
										
									</tr>
									<% if(cartData && cartData.products && cartData.products.length> 0) { %>
										<% cartData.products.forEach(cartProduct=> { %>
											<% if(cartProduct.product.is_listed===true){ %>

												<tr class="table_row">
													<td class="column-1">
														<div class="how-itemcart1">
															<% if (cartProduct.product && cartProduct.product.images &&
																cartProduct.product.images.length> 0) { %>
																<img src="/productImages/<%= cartProduct.product.images[0] %>"
																	alt="IMG">
																<% } else { %>
																	<!-- Handle the case where cartProduct.product or cartProduct.product.images is not defined or has a length of 0 -->
																	<% } %>
														</div>
													</td>
													<td class="column-2">
														<% if (cartProduct.product && cartProduct.product.title) { %>
															<%= cartProduct.product.title %><br>
															<% if(cartProduct.product.offer || cartProduct.product.category.offer){ %>
																<strong style="color: green;"><%= cartProduct.product.offer ? cartProduct.product.offer.percentage : cartProduct.product.category.offer.percentage %> % Off</strong>
															<% } %>
																<% } else { %>
																	<!-- Handle the case where cartProduct.product or cartProduct.product.title is not defined -->
																	<% } %>
													</td>
													<td class="column-3">₹ <%= cartProduct.product &&
															cartProduct.product.price %>
													</td>
													<% subtotal += (cartProduct.product.price * cartProduct.quantity); %>

													<td class="column-4">
														<div class="flex-w " style="justify-content: center;">
															<!-- <div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m"
															data-product-id="<%= cartProduct.product._id %>">
															<i class="fs-16 zmdi zmdi-minus"></i>
														</div> -->
															<input class="mtext-104 cl3 txt-center num-product"
																type="number" name="num-product1"
																value="<%= cartProduct.quantity %>"
																data-product-id="<%= cartProduct.product._id %>"
																readonly>
															<!-- <div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m"
															data-product-id="<%= cartProduct.product._id %>">
															<i class="fs-16 zmdi zmdi-plus"></i>
														</div> -->
														</div>
													</td>
													<td class="column-6">₹ <% if(cartProduct.product.offer || cartProduct.product.category.offer ) { %>
														<%= cartProduct.product.offer ? (cartProduct.product.offer.percentage * cartProduct.product.price)/100 :  ((cartProduct.product.category.offer.percentage * cartProduct.product.price)/100)* cartProduct.quantity %>
														<% discount += cartProduct.product.offer ? (cartProduct.product.offer.percentage * cartProduct.product.price * cartProduct.quantity) / 100 : (cartProduct.product.category.offer.percentage * cartProduct.product.price * cartProduct.quantity) / 100; %>
														<% }else{ %>
														0.00
													<% } %>
													</td>
													<td class="column-5">₹ <%= cartProduct.price * cartProduct.quantity %>
															<input type="hidden" id="total" value="<%= (cartProduct.product.price * cartProduct.quantity) - (cartProduct.product.offer && (cartProduct.product.offer.percentage * cartProduct.product.price)/100) %>">
													</td>

												</tr>
												<% }}) %>
													<% } else { %>
														<!-- Handle the case where cartData or cartData.products is not defined or has a length of 0 -->
														<% } %>

								</table>
							</div>
							<div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
								<div class="flex-w flex-m m-r-20 m-tb-5">
									<input class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text"
										name="coupon" placeholder="Coupon Code" id="couponCode" >

									<div
										class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5" id="couponApply">
										Apply coupon
									</div>
									<div
								
									<button class="btn btn-primary" type="button" data-toggle="collapse" data-target="#collapseExample" aria-expanded="false" aria-controls="collapseExample">
										View all Coupons
									  </button>
									</div>
									
									<div class="collapse" id="collapseExample">
										<div class="card card-body" style="display: flex;">
											<% if(couponData && couponData.length > 0){ %>
												<% for(i=0;i< couponData.length; i++){ %>
													<div class="offer-box" data-coupon-id="<%= couponData[i]._id %>">
														<span style="display: flex;">Coupon Name: &nbsp;<h5><%= couponData[i].couponName %></h5></span>
														<p>
															<strong>Copy this code:</strong>
															<span class="percentage" style="color: green;"><%= couponData[i].couponCode %></span>
														</p>
														<span style="display: flex;">Price Drop: &nbsp;<h5 style="color: red;">- <%= couponData[i].discountAmount %></h5></span>

														<p><strong>Description:</strong> <%= couponData[i].couponDescription %></p>
													</div>
													<hr>
												<% } %>
											<% } %>

										</div>
									  </div>





								</div>
					
							</div>
							<div class="row">
								<div class="col">
									<button type="button" class="btn btn-primary rounded-pill px-4 py-2" data-toggle="modal" data-target="#addAddressModal">
										<i class="fas fa-map-marker-alt mr-2"></i> Add New Address
									</button>
									<div id="selectAddressButton"
										class="flex-c-m stext-101 cl2 size-118 bg8 bor13  p-lr-15 trans-04 pointer m-tb-5">
										Select Shipping Address
									</div>
									<div class="address-container">
										<ul id="addressList" class="flex-list">
											<% if(userAddress) { %>
												<% userAddress.forEach((address, index)=> { %>
													<li id="selectedAddress-<%= address._id %>">
														<input type="radio" class="addressRadio"
															id="address<%= index + 1 %>" name="selectedAddress"
															value="<%= address._id %>" class="address-radio">
														<label for="address<%= index + 1 %>">
															<div class="card">
																<div class="card-body">
																	<strong class="card-title">
																		<%= address.name %>
																	</strong>&emsp;
																	<p>
																		<%= address.houseName %>&nbsp;
																			<%= address.street %>, <%= address.landmark
																					%>,
																					&nbsp;<%= address.city %>
																						&nbsp;<%= address.state %>
																							&nbsp; <%= address.pincode
																								%><br>
																								phone: <%=
																									address.mobile %>
																	</p>
																</div>
																<a href="#" style="text-align: end;"
																	onclick="editAddress('<%= address._id %>')"
																	data-toggle="modal"
																	data-target="#exampleModalCenter">edit address</a>
															</div>
														</label>
													</li>
												<% }) %>
											<% } %>
										</ul>
									</div>
								</div>
							</div>
						</div>

					</div>




					<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
						<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm"
							style="border: 1px solid; ">
							<h4 class="mtext-109 cl2 p-b-30">
								PRICE DETAILS
							</h4>

							<div class="flex-w flex-t bor12 p-b-13">
								<div class="size-208">
									<span class="stext-110 cl2">
										Subtotal :
									</span>
								</div>

								<div class="size-209 ">
									<span class="mtext-110 cl2 ">
										₹ <%= subtotal.toFixed(2) ? subtotal.toFixed(2) : 0.00 %>
									</span>
								</div>
							</div>


							<div class="flex-w flex-t bor12 p-b-13">
								<div class="size-208">
									<span class="stext-110 cl2">
										Discount :
									</span>
								</div>

								<div class="size-209">
									<span class="mtext-110 cl2" style="color: red;">
										₹ -<%= discount.toFixed(2) ?  discount.toFixed(2) : 0.00%>
									</span>
								</div>
							</div>


							<div class="flex-w flex-t bor12 p-b-13">
								<div class="size-208">
									<span class="stext-110 cl2">
										Coupon Applied:
									</span>
								</div>

								<div class="size-209">
									<span class="mtext-110 cl2 discount-section" style="color: red; ">
										₹ - <span id="couponAmount"></span>
									</span>
								</div>
							</div>

							<div class="flex-w flex-t bor12 p-b-13">
								<div class="size-208">
									<span class="stext-110 cl2">
										Shipping Charge:
									</span>
								</div>

								<div class="size-209">
									<span class="mtext-110 cl2 discount-section  shipping-charge">
										
									</span>
									<!-- &nbsp;<span style="color: green;">FREE Delivery</span> -->
									</div>
							</div>
							<div class="flex-w flex-t p-t-27 p-b-33">
								<div class="size-208">
									<span>
										<strong>
											<h5 style="color: black; font: bold;">Total Payable:</h5>
										</strong>
									</span>
								</div>

								<div class="size-209 p-t-1">
									₹<span class="mtext-110 cl2" id="totalAmount" >
										 <%= cartData.cartTotal ? cartData.cartTotal: 0.00 %>
									</span>
								</div>
							</div>
							<div class="border p-3 mb-5">
								<h4 class="h mb-3 text-black">Select A Payment Method</h4>
								<div class="size-209 p-t-1">
									<span id="walletAmount" >
										Wallet Balance:  <span style="font-size: medium; color: black;"><strong>₹ <%= walletData? walletData.balance:0.00 %></strong></span><br>
									</span>
								</div>
									<div class="expandable" id="walletPay">
										<button class="expand-btn">Wallet</button>
										<div class="content">
											<span>Secure, fast, and just a click away!</span><br>
											<button id="walletPayment" class="btn btn-primary"> Pay Now</button>
										</div>
									</div>
								<div class="expandable">
									<button class="expand-btn">Online Payment</button>
									<div class="content">
										<span>Secure, seamless, and just a click away!</span><br>
										<div class="input-group mb-3" id="checkWallet">
											<div class="input-group-prepend">
											  <div class="input-group-text">
												<input type="checkbox" aria-label="Checkbox for following text input" style="margin-top:5.5px; transform: scale(1.5); position: absolute;" id="useWallet">
											  </div>
											</div>
											<span style="margin-left: 15px;"> &nbsp; Use Wallet:  <span style="font-size: medium; color: black;"><strong>₹  <%= walletData? walletData.balance:0.00 %></strong></span><br></span>	
									  </div>
										<button id="onlinePayment" class="btn btn-primary"> Pay Online</button>
									</div>
								</div>
							
									<div class="expandable" id="cod">
										<button class="expand-btn">Cash On Delivery</button>
										<div class="content">
											<span>Enjoy the ease of Cash on Delivery for stress-free shopping.</span><br>
											<button class="btn btn-primary" id="placeOrder">Place Order</button>
										</div>
									</div>
								
								
							</div>
						</div>

					</div>
				</div>
			</div>

		</form>
	</div>
	<!-- Edit Address Modal -->
	<div class="modal" id="exampleModalCenter" role="dialog" aria-labelledby="exampleModalCenterTitle"
		aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="exampleModalLongTitle">Edit Address</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="content-header text-center">
						<h2>Edit Address</h2>
					</div>
					<form class="modal1" id="editAddress">
						<div class="form-group">
							<input type="hidden" id="addressId">
							<label for="name">Name</label>
							<input type="text" id="editName" name="name" class="form-control" required>
						</div>
						<div class="form-group">
							<label for="mobile">Mobile</label>
							<input type="text" id="editMobile" name="mobile" class="form-control">
						</div>
						<div class="form-group">
							<label for="houseName">House Name</label>
							<input type="text" id="editHouseName" name="houseName" class="form-control" required>
						</div>
						<div class="form-group">
							<label for="landmark">Landmark</label>
							<input type="text" id="editLandmark" name="landmark" class="form-control" required>
						</div>
						<div class="form-row">
							<div class="form-group col-md-6">
								<label for="pinCode">Postal Code</label>
								<input type="text" id="editPinCode" name="pincode" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="street">Street</label>
								<input type="text" id="editStreet" name="street" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="city">City</label>
								<input type="text" id="editCity" name="city" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="state">State</label>
								<input type="text" id="editState" name="state" class="form-control" required>
							</div>
						</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary">Save changes</button>
				</div>
				</form>
			</div>
		</div>
	</div>
	<!-- Add Address Modal -->
	<div class="modal" id="addAddressModal" role="dialog" aria-labelledby="addAddressModalTitle" aria-hidden="true">
		<div class="modal-dialog modal-dialog-centered" role="document">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title" id="addAddressModalTitle">Add Address</h5>
					<button type="button" class="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span>
					</button>
				</div>
				<div class="modal-body">
					<div class="content-header text-center">
						<h2>Add Address</h2>
					</div>
					<form class="modal1" id="addAddressForm">
						<div class="form-group">
							<label for="name">Name</label>
							<input type="text" id="name" name="name" class="form-control" required>
						</div>
						<div class="form-group">
							<label for="mobile">Mobile</label>
							<input type="text" id="mobile" name="mobile" class="form-control">
						</div>
						<div class="form-group">
							<label for="houseName">House Name</label>
							<input type="text" id="houseName" name="houseName" class="form-control" required>
						</div>
						<div class="form-group">
							<label for="landmark">Landmark</label>
							<input type="text" id="landmark" name="landmark" class="form-control" required>
						</div>
						<div class="form-row">
							<div class="form-group col-md-6">
								<label for="pinCode">Postal Code</label>
								<input type="text" id="pinCode" name="pincode" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="street">Street</label>
								<input type="text" id="street" name="street" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="city">City</label>
								<input type="text" id="city" name="city" class="form-control" required>
							</div>
							<div class="form-group col-md-6">
								<label for="state">State</label>
								<input type="text" id="state" name="state" class="form-control" required>
							</div>
						</div>
				</div>
				<div class="modal-footer">
					<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
					<button type="button" class="btn btn-primary" id="addAddressButton">Add Address</button>
				</div>
				</form>
			</div>
		</div>
	</div>


	<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

	<script>
		$(document).ready(function () {
			$('#couponApply').click(function () {
				const couponCode = document.getElementById("couponCode").value.trim();
				if(couponCode!==''){
					$.ajax({
						url:'/coupon/apply',
						method:'PATCH',
						data:{
							couponCode:couponCode
						},
						success:function(response){
							if (response.success) {
            const totalAmountElement = document.getElementById('totalAmount');
            const originalTotalAmount = parseFloat(totalAmountElement.textContent); // Get original total
            const couponAmount = parseFloat(response.couponData.discountAmount);

            const newTotalAmount = originalTotalAmount - couponAmount; // Calculate new total
            totalAmountElement.textContent = newTotalAmount.toFixed(2); // Update total with 2 decimal places
			const couponAmountElement = document.getElementById('couponAmount');
            couponAmountElement.textContent = `${couponAmount.toFixed(2)}`; // Display discount with a minus sign
        
        } else {
            // Handle error (e.g., display message)
        }
						},
						error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Pincode error! Please provide valid Pincode..'
                        });
                    }
					})
				}
			})
		})
	</script>
<script>
document.addEventListener('DOMContentLoaded', function () {
  // Select the target node
  const targetNode = document.getElementById('totalAmount');
  const walletAmount = parseFloat('<%= walletData ? walletData.balance : 0.00 %>');
  const cod = document.getElementById('cod');
  const walletPay = document.getElementById('walletPay');
  const checkWallet = document.getElementById('checkWallet');
  const useWallet = document.getElementById('useWallet');

  // Function to handle UI changes based on total amount
  function handleUI(totalAmount) {
    if (totalAmount > 1000) {
      cod.style.display = 'none';
    } else {
      cod.style.display = 'block';
    }

    if (totalAmount > walletAmount) {
      walletPay.style.display = 'none';
      checkWallet.style.display = 'block';
	  
    } else {
      walletPay.style.display = 'block';
      checkWallet.style.display = 'none';
    }
  }

  // Initial UI setup
  const initialTotalAmount = parseFloat(targetNode.textContent.trim().replace(/[^\d.-]/g, '')).toFixed(2);
  handleUI(initialTotalAmount);

  // Create a new MutationObserver instance
  const observer = new MutationObserver(function (mutationsList) {
    // Iterate through each mutation
    for (const mutation of mutationsList) {
      // Check if the content of the target node has changed
      if (mutation.type === 'childList' && mutation.target === targetNode) {
        // Get the new total amount
        const newTotalAmount = parseFloat(targetNode.textContent.trim().replace(/[^\d.-]/g, '')).toFixed(2);
        // Update the UI based on the new total amount
        handleUI(newTotalAmount);
      }
    }
  });
  // Start observing changes to the target node
  observer.observe(targetNode, { childList: true, subtree: true });
});

</script>

<script>
    // Add event listener to address radio buttons
    const addressRadios = document.querySelectorAll('.addressRadio');
    addressRadios.forEach(radio => {
        radio.addEventListener('change', async event => {
            const addressId = event.target.value;
            try {
                $.ajax({
                    url: `/user/getDistance/${addressId}`,
                    method: 'GET',
                    success: function (response) {
                        const shippingSpan = document.querySelector('.shipping-charge');
                        if (response.shippingCharge) {
                            shippingSpan.textContent = '₹ ' + response.shippingCharge;
                        } else {
                            shippingSpan.textContent = 'FREE Delivery';
                        }
                        const totalAmount = document.getElementById('totalAmount');
                        const cartTotal = response.cartTotal || 0.00;
                        const shippingCharge = response.shippingCharge || 0.00;
                        const total = cartTotal + shippingCharge;
                        totalAmount.textContent = ' ' + total.toFixed(2);
                    },
                    error: function (xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Pincode error! Please provide valid Pincode..'
                        });
                    }
                })
            } catch (error) {
                console.error(error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error',
                    text: 'An unexpected error occurred!'
                });
            }
        });
    });
</script>

	<script>
		$(document).ready(function () {
			$('#exampleModalCenter .modal-footer .btn-primary').click(function () {
				const addressId = $('#addressId').val();
				const formData = {
					name: $('#editName').val(),
					mobile: $('#editMobile').val(),
					houseName: $('#editHouseName').val(),
					landmark: $('#editLandmark').val(),
					pincode: $('#editPinCode').val(),
					street: $('#editStreet').val(),
					city: $('#editCity').val(),
					state: $('#editState').val()
				};
				$.ajax({
					url: `/user/editAddress/${addressId}`,
					type: 'PUT',
					contentType: 'application/json',
					data: JSON.stringify(formData),
					success: function (response) {
						if (response.success) {
							Swal.fire({
								title: 'Success',
								text: response.message,
								icon: 'success'
							}).then((result) => {
								if (result.isConfirmed) {
									$('#exampleModalCenter').modal('hide');
									$('#addressList').load(location.href + ' #addressList');
									location.reload()
								}
							});

						} else {
							Swal.fire('Alert', response.message, 'info');
						}

					},
					error: function (xhr, status, error) {
						console.error('Error saving address:', error);
						// Handle error (e.g., display error message to the user)
					}
				});
			});
		});
	</script>
	<script>
		function editAddress(addressId) {
			fetch(`/user/getAddress/${addressId}`)
				.then(response => {
					if (!response.ok) {
						Swal.fire('alert', 'Please try again..', 'info')
					}
					return response.json();
				})
				.then(addressData => {
					document.getElementById('addressId').value = addressData._id;
					document.getElementById('editName').value = addressData.name;
					document.getElementById('editMobile').value = addressData.mobile;
					document.getElementById('editHouseName').value = addressData.houseName;
					document.getElementById('editLandmark').value = addressData.landmark;
					document.getElementById('editPinCode').value = addressData.pincode;
					document.getElementById('editStreet').value = addressData.street;
					document.getElementById('editCity').value = addressData.city;
					document.getElementById('editState').value = addressData.state;
				})
				.catch(error => {
					console.error('There was a problem with the fetch operation:', error);
				});
		}
	</script>
	<script>
		$(document).ready(function () {
			// Attach click event listener to the "Save changes" button
			$('#exampleModalCenter').on('click', '.btn-primary', function () {
				// Serialize form data
				var formData = $('#editAddress').serialize();

				// Make AJAX request
				$.ajax({
					type: 'POST',
					url: '/user/editAddress/', // Replace with your API endpoint
					data: formData,
					success: function (response) {
						// Handle success response
						console.log('Changes saved successfully:', response);

						// Close the modal
						$('#exampleModalCenter').modal('hide');
					},
					error: function (xhr, status, error) {
						// Handle error response
						console.error('Error saving changes:', error);
					}
				});
			});
		});
	</script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const addressList = document.getElementById('addressList');
			if (addressList.children.length > 3) {
				addressList.style.scrollSnapType = 'y mandatory'; /* Enable snapping */
				addressList.style.msScrollSnapType = 'mandatory y'; /* For IE/Edge */
				addressList.style.scrollBehavior = 'smooth'; /* Smooth scrolling */
			}
		});
	</script>
	<script>
		document.addEventListener('DOMContentLoaded', function () {
			const expandButtons = document.querySelectorAll('.expand-btn');

			expandButtons.forEach(function (button) {
				button.addEventListener('click', function (event) {
					event.preventDefault(); // Prevent page refresh

					const content = this.nextElementSibling;
					const otherContents = document.querySelectorAll('.content');

					// Collapse all other expandable sections
					otherContents.forEach(function (otherContent) {
						if (otherContent !== content) {
							otherContent.style.display = 'none';
						}
					});

					// Toggle display of the clicked content
					content.style.display = content.style.display === 'block' ? 'none' : 'block';
				});
			});
		});

	</script>

	<script>
		document.getElementById('razorpayButton').addEventListener('click', function () {
			// Show the Razorpay payment popup
			document.getElementById('razorpayPopup').style.display = 'block';
		});
		document.getElementsByClassName('close')[0].addEventListener('click', function () {
			// Show the Razorpay payment popup
			document.getElementById('razorpayPopup').style.display = 'none';
		});
	</script>
	<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
	<!-- Add this line in the <head> section of your HTML -->

	<script>
$(document).ready(function() {
    $('#addAddressButton').click(function() {
        // Gather form data
        const formData = {
            name: $('#name').val(),
            mobile: $('#mobile').val(),
            houseName: $('#houseName').val(),
            landmark: $('#landmark').val(),
            pincode: $('#pinCode').val(),
            street: $('#street').val(),
            city: $('#city').val(),
            state: $('#state').val()
        };
        $.ajax({
            url: '/user/createAddress',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(formData),
            success: function(response) {
				if (response.success) {
					Swal.fire({
								title: 'Success',
								text: response.message ,
								icon: 'success'
							}).then((result) => {
								if (result.isConfirmed) {
									$('#addAddressModal').modal('hide');
									$('#addressList').load(location.href + ' #addressList');
									location.reload();
								}
							});

						} else {
							Swal.fire('Alert', response.message, 'info');
						}
            },
            error: function(xhr, status, error) {
                console.error('Error adding address:', error);
                // Handle error (e.g., display error message to the user)
            }
        });
    });
});

	</script>

	<script>
		
		document.addEventListener('DOMContentLoaded', function () {
			document.getElementById('walletPayment').addEventListener('click', function (event) {
				event.preventDefault();
				placeOrder('Wallet');
			});
		});
		document.addEventListener('DOMContentLoaded', function () {
			document.getElementById('placeOrder').addEventListener('click', function (event) {
				event.preventDefault();
				placeOrder('Cash on Delivery');
			});
		});
		document.addEventListener('DOMContentLoaded', function () {
			document.getElementById('onlinePayment').addEventListener('click', function (event) {
				event.preventDefault();
				placeOrder('Online');
			});
		});
		let useWalletChecked=false;
			const useWallet=document.getElementById('useWallet')
			if(useWallet.checked){
				useWalletChecked=true
			}
		function placeOrder(payment) {
			const selectedAddressInput = document.querySelector('input[name="selectedAddress"]:checked');
			if (!selectedAddressInput) {
				// Display an error message if no address is selected
				swal("Alert", "Please select an address", "info");
				return; // Exit the function to prevent further execution
			}
			const selectedAddressId = selectedAddressInput.value;
			Swal.fire({
        title: 'Confirm Payment',
        text: `Happy shopping... One step More..`,
        icon: 'info',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, Proceed'
    }).then((result)=>{
		if(result.isConfirmed){
			$.ajax({
				type: 'POST',
				url: '/order/create',
				data: { selectedAddressId: selectedAddressId, paymentMethod: payment ,usingWallet:useWalletChecked },
				success: function (response) {
					if(response.codSuccess){
						swal("Success", "Order placed successfully", "success").then(() => {
						window.location.href = '/order/thankyou';
					});
					}else if(response.online){
						razorpayPayment(response.orderData)
					}else if(response.wallet){
						swal("Success", "Order placed successfully", "success").then(() => {
						window.location.href = '/order/thankyou';
					});
					}
					
				},
				error: function (xhr, status, error) {
					swal("Alert", "Please add a valid product", 'warning')
						.then(() => {
							window.location.href = '/cart';
						});
				}
			});
		}
		})
			
		}
		function razorpayPayment(order){
			var options = {
		"key": "rzp_test_m7scdXTvPyrkkT", // Enter the Key ID generated from the Dashboard
		"amount": order.amount,
		"currency": "INR",
		"description": "COZA STORE",
		"image": "https://s3.amazonaws.com/rzp-mobile/images/rzp.jpg",
		"order_id": order.id,
		"prefill":
		{
			"name": "<%= cartData.user_name %>",
			"email": "<%= cartData.userId.email %>",
			"contact": "<%= cartData.userId.mobile %>",
		},
		config: {
			display: {
				blocks: {
					utib: { //name for Axis block
						name: "Pay using Axis Bank",
						instruments: [
							{
								method: "card",
								issuers: ["UTIB"]
							},
							{
								method: "netbanking",
								banks: ["UTIB"]
							},
						]
					},
					other: { //  name for other block
						name: "Other Payment modes",
						instruments: [
							{
								method: "card",
								issuers: ["ICIC"]
							},
							{
								method: 'netbanking',
							}
						]
					}
				},
				hide: [
					{
						method: "upi"
					}
				],
				sequence: ["block.utib", "block.other"],
				preferences: {
					show_default_blocks: false // Should Checkout show its default blocks?
				}
			}
		},
		"handler": function (response) {
			verifyPayment(response,order)

		},
		"modal": {
			"ondismiss": function () {
				Swal.fire({
					title: 'Are you sure?',
					text: "You want to close the form?",
					icon: 'question',
					showCancelButton: true,
					confirmButtonColor: '#3085d6',
					cancelButtonColor: '#d33',
					confirmButtonText: 'Yes, close it!',
					cancelButtonText: 'No, cancel!'
				}).then((result) => {
					if (result.isConfirmed) {
						location.reload();
					} else {
						rzp1.open();
					}
				});
			}
		}
	};
var rzp1 = new Razorpay(options);
rzp1.open();
		}

		function verifyPayment(payment,order){
			$.ajax({
				url:'/order/verifyPayment',
				data:{
					payment,
					order,
					usingWallet:useWalletChecked,
				},
				method:'POST',
				success:function(response){
					if(response.success){
						location.reload()
					}
				}
			})
		}

	</script>



	<%- include('./layouts/userLayout/footer.ejs') %>