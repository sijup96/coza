<%- include('../layouts/adminLayout/_header.ejs') -%>
<style>
    .swal-custom .swal-title {
    color: #ff0000 !important; /* Change the color to red */
    background-color: green;
}
#swal2-title{
    color: rgb(32, 88, 32);
}

</style>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Coupon Details</h2>

            </div>
            <h3 style="color:red">
                <%= messages.head ? messages.head : '' %>
            </h3>
           
        </div>

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form id="couponForm" action="/coupon/create" method="post">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Coupon Name</label>
                                <input type="text" placeholder="Type here" class="form-control" id="couponName"
                                    name="couponName" />
                                    <p style="color:red" id="couponNameError"></p>
                            </div>
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Discount Amount</label>
                                <input type="text" placeholder="Type here" class="form-control" id="discountAmount"
                                    name="discountAmount" />
                                    <p style="color:red" id="discountAmountError"></p>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" class="form-control" name="couponDescription" id="couponDescription" ></textarea>
                                <p style="color:red" id="couponDescriptionError"></p>
                            </div>
                            <div class="mb-4">
                                <label for="expiryDate" class="form-label">Expiry Date</label>
                                <input type="date" class="form-control" id="expiryDate" name="expiryDate"/>
                                <p style="color:red" id="expiryDateError"></p>
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-primary">Create Coupon</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-9">
                        <div class="table-responsive">

                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th class="text-center">

                                        </th>
                                        <th>No.</th>
                                        <th>Name</th>
                                        <th>Code</th>
                                        <th>Amount</th>
                                        <th>Expiry Date</th>
                                        <th>Status</th>
                                        <th class="text-end">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if(couponData && couponData.length > 0) { %>
                                        <% for(let i=0,n=1; i < couponData.length;i++,n++){ %>

                                            <tr>
                                                <td class="text-center">
                                                    <!-- <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" />
                                        </div> -->
                                                </td>
                                                <td>
                                                    <%= n %>
                                                </td>
                                                <td><h6>
                                                        <%= couponData[i].couponName %>
                                                </h6></td>

                                                <td><h6>
                                                    <%= couponData[i].couponCode %>
                                                </h6>
                                                </td>

                                                <td><h6>
                                                    â‚¹  <%= couponData[i].discountAmount %>
                                                </h6>
                                                </td>
                                                <td><h6>
                                                    <%= couponData[i].expiryDate.toLocaleDateString('en-GB') %> 
                                                </h6>
                                                </td>
                                                <td><h6>
                                                    <%= couponData[i].is_listed==true?'Listed':'UnListed' %>
                                                </h6>
                                                </td>
                                                <td class="text-end">
                                                    <div class="dropdown">
                                                        <a href="#" data-bs-toggle="dropdown"
                                                            class="btn btn-light rounded btn-sm font-sm"> <i
                                                                class="material-icons md-more_horiz"></i> </a>
                                                        <div class="dropdown-menu">
                                                            <a class="dropdown-item"
                                                            onclick="editAddress('<%= couponData[i]._id %>')"
                                                            data-toggle="modal"
                                                            data-target="#exampleModalCenter">Edit info</a>
                                                                <a class="dropdown-item text-danger"
                                                                onclick="updateOfferStatus('<%= couponData[i]._id %>', '<%= couponData[i].is_listed %>')"><%= couponData[i].is_listed==true?'UnList':'List' %></a>
                                                            <a class="dropdown-item text-danger"
                                                                onclick="confirmDelete('<%= couponData[i]._id %>')">Delete</a>
                                                        </div>
                                                    </div>
                                                    <!-- dropdown //end -->
                                                </td>
                                            </tr>
                                            <% } %>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="5">Coupons not found</td>
                                                    </tr>
                                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- .col// -->
                </div>
                <!-- .row // -->
            </div>
            <!-- card body .// -->
        </div>
        <!-- card .// -->
    </section>
   <!-- Edit Address Modal -->
<div class="modal" id="exampleModalCenter" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content dark-mode"> <!-- Assuming dark-mode class is already applied for dark mode -->
            <div class="modal-header bg-dark text-white"> <!-- Adjust header background and text color -->
                <h5 class="modal-title" id="exampleModalLongTitle">Edit Coupon</h5>
                <button type="button" class="close text-black" data-dismiss="modal" aria-label="Close"> <!-- Adjust close button color -->
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body bg-secondary text-white"> <!-- Adjust body background and text color -->
                <div class="content-header text-center">
                    <h2>Edit Coupon</h2>
                </div>
                <form class="modal1" id="editCoupon">
                    <div class="form-group">
                        <input type="text" id="couponId" name="couponId" class="form-control" hidden>
          
                        <label for="couponName" class="text-white font-weight-bold">Coupon Name</label> <!-- Bold label -->
                        <input type="text" id="editCouponName" name="couponName" class="form-control" >
                        <p style="color:red" id="editCouponNameError"></p>
                    </div>
                    <div class="form-group">
                        <label for="discountAmount" class="text-white font-weight-bold">Discount Amount</label> <!-- Bold label -->
                        <input type="text" id="editDiscountAmount" name="discountAmount" class="form-control">
                        <p style="color:red" id="editDiscountAmountError"></p>
                    </div>
                    <div class="form-group">
                        <label for="couponDescription" class="text-white font-weight-bold">Description</label> <!-- Bold label -->
                        <input type="text" id="editCouponDescription" name="couponDescription" class="form-control" >
                        <p style="color:red" id="editCouponDescriptionError"></p>
                    </div>
                        <div class="form-group">
                            <label for="expiryDate" class="text-white font-weight-bold">Expiry Date</label> <!-- Bold label -->
                            <input type="date" id="editExpiryDate" name="expiryDate" class="form-control" >
                            <p style="color:red" id="editExpiryDateError"></p>
                        </div>
            </div>
            <div class="modal-footer bg-dark"> <!-- Adjust footer background color -->
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="saveChangesBtn">Save changes</button>
            </div>
            </form>
        </div>
    </div>
</div>
    <!-- include jquery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Include DataTables -->
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <!-- <script src="/admin/sweetalert2/dist/sweetalert2.min.js"></script> -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

    <script>
$(document).ready(function(){
    $('#saveChangesBtn').click(function(event) {
        event.preventDefault(); 
        let flag = 1; 
        // Validation function for coupon name
        function validateCouponName(couponName) {
            $('#editCouponNameError').html(''); // Clear previous error message
            if (!couponName.trim()) {
                flag = 0;
                $('#editCouponNameError').html('Coupon name is required');
                return false;
            } else if (couponName.length < 4 || couponName.length > 20) {
                flag = 0;
                $('#editCouponNameError').html('Coupon name length should be between 4 and 20 characters');
                return false;
            } else {
                $('#editCouponNameError').html('');
                return true;
            }
        }

        // Validation function for discount amount
        function validateDiscountAmount(discountAmount) {
            $('#editDiscountAmountError').html(''); // Clear previous error message
            const numericRegex = /^[0-9]+$/;
            if (!numericRegex.test(discountAmount) || parseFloat(discountAmount) <= 0 || parseFloat(discountAmount) > 500) {
                flag = 0;
                $('#editDiscountAmountError').html('Discount amount should be between 1 and 500');
                return false;
            } else if (parseFloat(discountAmount) % 10 !== 0) {
                flag = 0;
                $('#editDiscountAmountError').html('Discount amount should be a multiple of 10');
                return false;
            } else {
                $('#editDiscountAmountError').html('');
                return true;
            }
        }

        // Validation function for coupon description
        function validateCouponDescription(couponDescription) {
            $('#editCouponDescriptionError').html(''); // Clear previous error message
            if (!couponDescription.trim()) {
                flag = 0;
                $('#editCouponDescriptionError').html('Coupon description is required');
                return false;
            } else {
                $('#editCouponDescriptionError').html('');
                return true;
            }
        }

        // Validation function for expiry date
        function validateExpiryDate(expiryDate) {
            $('#editExpiryDate').html(''); // Clear previous error message
            const currentDate = new Date();
            const selectedDate = new Date(expiryDate);

            if (!expiryDate) {
                flag = 0;
                $('#editExpiryDateError').html('Expiry date is required');
                return false;
            } else if (selectedDate <= currentDate) {
                flag = 0;
                $('#editExpiryDateError').html('Expiry date should be in the future');
                return false;
            } else {
                $('#editExpiryDateError').html('');
                return true;
            }
        }

        // Get form values
        const couponName = $('#editCouponName').val().trim();
        const discountAmount = $('#editDiscountAmount').val().trim();
        const couponDescription = $('#editCouponDescription').val().trim();
        const expiryDate = $('#editExpiryDate').val();

        // Perform validation for each field
        const isCouponNameValid = validateCouponName(couponName);
        const isDiscountAmountValid = validateDiscountAmount(discountAmount);
        const isCouponDescriptionValid = validateCouponDescription(couponDescription);
        const isExpiryDateValid = validateExpiryDate(expiryDate);

        // Proceed with form submission if all validations passed
        if (flag === 1) {
            const formData = $('#editCoupon').serialize();
            $.ajax({
                url: '/coupon/edit',
                type: 'PUT', 
                data: formData,
                success: function(response) {
                    if (response.success) {
                        Swal.fire('Success', response.message, 'success')
                            .then(() => {
                                location.reload();
                            });
                    } else{
                        Swal.fire('Error', response.message, 'error');
                    }
                },
                error: function(xhr, status, error) {
                    if (xhr.status === 400) {
                    Swal.fire({
                        title: 'Alert',
                        text: xhr.responseJSON.message,
                        icon: 'alert'
                    });
                }        
                    }
            });
        }
    });
});
        </script>
   <script>
    function editAddress(couponId) {
        fetch(`/coupon/getCoupon/${couponId}`)
            .then(response => {
                if (!response.ok) {
                    throw new Error('Failed to fetch coupon data');
                }
                return response.json();
            })
            .then(data => {
                const couponData = data.couponData;
                document.getElementById('couponId').value = couponData._id;
                document.getElementById('editCouponName').value = couponData.couponName;
                document.getElementById('editDiscountAmount').value = couponData.discountAmount;
                document.getElementById('editCouponDescription').value = couponData.couponDescription;
                document.getElementById('editExpiryDate').value = formatDate(couponData.expiryDate);
            })
            .catch(error => {
                console.error('There was a problem with the fetch operation:', error);
                Swal.fire('Error', 'Failed to fetch coupon data', 'error');
            });
    }

    function formatDate(dateString) {
        const date = new Date(dateString);
        const year = date.getFullYear();
        let month = (1 + date.getMonth()).toString().padStart(2, '0');
        let day = date.getDate().toString().padStart(2, '0');
        return year + '-' + month + '-' + day;
    }
</script>
<script>
    $(document).ready(function(){
        $('#couponForm').submit(function(event){
            event.preventDefault();
            let flag = 1; 
            // Validation function for coupon name
            function validateCouponName(couponName) {
                $('#couponNameError').html(''); // Clear previous error message
                if (!couponName.trim()) {
                    flag = 0;
                    $('#couponNameError').html('Coupon name is required');
                    return false;
                }else  if (couponName.length > 15 || couponName.length < 4 ) {
                    flag = 0;
                    $('#couponNameError').html('Coupon name length between 4 and 20');
                    return false;
                }{
                    $('#couponNameError').html('');
                    return true;
                }
            }
    
            // Validation function for discount amount
            function validateDiscountAmount(discountAmount) {
                $('#discountAmountError').html(''); // Clear previous error message
                const numericRegex = /^[0-9]+$/;
                if (!numericRegex.test(discountAmount) || parseFloat(discountAmount) <= 0 || parseFloat(discountAmount) > 500) {
                    flag = 0;
                    $('#discountAmountError').html('Coupon amount should be between 10 and 500');
                    return false;
                } else if (parseFloat(discountAmount) % 10 !== 0) {
                    flag = 0;
                    $('#discountAmountError').html('Coupon amount should be a multiple of 10');
                    return false;
                } else {
                    $('#discountAmountError').html('');
                    return true;
                }
            }
    
        // Validation functions for each field
        function validateCouponDescription(fieldName, errorId) {
                $('#' + errorId).text(''); // Clear previous error message
                var fieldValue = $('#' + fieldName).val().trim();
                var errorSpan = $('#' + errorId);

                if (fieldValue && fieldValue.startsWith(' ')) {
                    flag = 0;
                    errorSpan.text(fieldName + ' should not start with a space.');
                    return;
                }

                var wordCount = fieldValue.trim().split(/\s+/).filter(function (word) {
                    return word.length > 0;
                }).length;

                if (wordCount >= 5 && wordCount <=20) {
                    errorSpan.text('');
                } else {
                    flag = 0;
                    errorSpan.text(fieldName + ' should have 5 words to 20 words.');
                }
            }
    
             // Validation function for date fields
             function validateDateField(fieldName, errorId) {
            const fieldValue = $('#' + fieldName).val().trim();
            const errorSpan = $('#' + errorId);
            console.log(fieldValue);
            const currentDate = new Date().setHours(0, 0, 0, 0);
            const selectedDate = new Date(fieldValue).setHours(0, 0, 0, 0);

            if (!fieldValue) {
                flag = 0;
                errorSpan.text('Please select a date.');
                return false;
            } 
            if(selectedDate < currentDate) {
                flag = 0;
                errorSpan.text('Please select a date from today.');
                return false;
            } else {
                errorSpan.text(''); // Clear any previous error message
                return true;
            }
        }
    
            // Perform validation for each field
            let couponName = $('#couponName').val().trim();
            let discountAmount = $('#discountAmount').val().trim();
            let couponDescription = $('#couponDescription').val().trim();
            validateCouponName(couponName);
            validateDiscountAmount(discountAmount);
            validateCouponDescription('couponDescription', 'couponDescriptionError');
            validateDateField('expiryDate', 'expiryDateError');
            // Proceed with form submission if all validations passed
            if (flag === 1) {
                const formData = $(this).serialize(); // Serialize form data
                $.ajax({
                    type: 'POST',
                    url: '/coupon/create',
                    data: formData,
                    success: function (response) {
                        if (response.success) {
                            Swal.fire({
                                title: 'Success',
                                text: response.message,
                                icon: 'success',
                                customClass: {
                                    popup: 'swal-custom', 
                                },
                            }).then(() => {
                                window.location.reload();
                            });
                        } else {
                            Swal.fire({
                                title: 'Alert',
                                text: response.message,
                                icon: 'info'
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        if (xhr.status === 400) {
                            Swal.fire({
                                title: 'Alert',
                                text: xhr.responseJSON.message,
                                icon: 'alert'
                            });
                        }
                    }
                });
            }
        });
    });
    </script>


    <script>
function confirmDelete(couponId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You are about to delete this Offer. Are you sure you want to proceed?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/coupon/delete', {
    method: 'DELETE',
    headers: {
        'Content-Type': 'application/json'
    },
    body: JSON.stringify({ couponId: couponId })
})
.then(response => response.json())
.then(data => {
    if (data.success) {
        Swal.fire({
            title: 'Success',
            text: data.message,
            icon: 'success'
        })
        .then(() => {
            location.reload();
        });
    } else {
        Swal.fire({
            title: 'Failed',
            text: data.message,
            icon: 'error'
        });
    }
})
.catch(error => {
    console.error('Error:', error);
    Swal.fire({
        title: 'Error',
        text: 'An error occurred',
        icon: 'error'
    });
       })
        }
    });
}
</script>
<script>

        function updateOfferStatus(couponId, currentStatus) {
    const newStatus = currentStatus === 'true' ? 'false' : 'true';
    Swal.fire({
        title: 'Are you sure?',
        text: 'You are about to chane Status this Offer. Are you sure you want to proceed?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes !',
        customClass: {
        title: 'custom-title-class' 
    }
    }).then((result)=>{
        if(result.isConfirmed){
            fetch(`/coupon/updateStatus`, {
        method: 'PATCH',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ is_listed: newStatus ,couponId:couponId}),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        // Handle success
        window.location.reload()
        // Optionally, you can update the UI or perform additional actions
    })
    .catch(error => {
        // Handle error
        console.error('There was a problem with the fetch operation:', error);
    });
        }
    })
}
    </script>

<!-- Validation -->
<script>
    function validateField(fieldName, errorId, regex) {
        var fieldValue = $('#' + fieldName).val();
        var errorSpan = $('#' + errorId);

        if (fieldValue && fieldValue.startsWith(' ')) {
            errorSpan.text('Title should not start with a space.');
            return;
        }

        if (!regex.test(fieldValue)) {
            errorSpan.text('Title  must meet the validation criteria..');
        } else {
            errorSpan.text('');
        }
    }

    function validateDescription(fieldName, errorId) {
        var fieldValue = $('#' + fieldName).val();
        var errorSpan = $('#' + errorId);

        if (fieldValue && fieldValue.startsWith(' ')) {
            errorSpan.text(fieldName + ' should not start with a space.');
            return;
        }

        var wordCount = fieldValue.trim().split(/\s+/).filter(function (word) {
            return word.length > 0;
        }).length;

        if (wordCount >= 5) {
            errorSpan.text('');
        } else {
            errorSpan.text(fieldName + ' should have more than 5 words.');
        }
    }

    $('#description').on('input', function () {
        validateField('description', 'descriptionError', /^[\s\S]{10,}$/);
    });



</script>


    <%- include('../layouts/adminLayout/_footer.ejs') -%>