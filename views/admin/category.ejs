<%- include('../layouts/adminLayout/_header.ejs') -%>

    <section class="content-main">
        <div class="content-header">
            <div>
                <h2 class="content-title card-title">Categories</h2>

            </div>
            <h3 style="color:red">
                <%= messages.head ? messages.head : '' %>
            </h3>
            <div>
                <input type="text" placeholder="Search Categories" class="form-control bg-white" />
            </div>
        </div>

        <div class="card">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <form action="/admin/createCategory" method="post">
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Name</label>
                                <input type="text" placeholder="Type here" class="form-control" id="title"
                                    name="title" required/>
                                    <p style="color:red" id="titleError"></p>
                            </div>
                            <div class="mb-4">
                                <label class="form-label">Description</label>
                                <textarea placeholder="Type here" class="form-control" name="description" id="description" required></textarea>
                                <p style="color:red" id="descriptionError"></p>
                            </div>
                            <div class="d-grid">
                                <button class="btn btn-primary">Create category</button>
                            </div>
                        </form>
                    </div>
                    <div class="col-md-9">
                        <div class="table-responsive">

                            <table class="table table-hover">
                                <thead>
                                    <tr>
                                        <th class="text-center">

                                        </th>
                                        <th>No.</th>
                                        <th>Name</th>

                                        <th>Slug</th>
                                        <th>Status</th>
                                        <th>Offer</th>
                                        <th class="text-end">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <% if(category.length> 0) { %>
                                        <% for(let i=0,n=1; i < category.length;i++,n++){ %>

                                            <tr>
                                                <td class="text-center">
                                                    <!-- <div class="form-check">
                                            <input class="form-check-input" type="checkbox" value="" />
                                        </div> -->
                                                </td>
                                                <td>
                                                    <%= n %>
                                                </td>
                                                <td><b>
                                                        <%= category[i].title %>
                                                    </b><br>
                                                    <b style="color: red;"><%= category[i].offer && category[i].offer.percentage ?category[i].offer.percentage +' % Offer' :'' %></b>
                                                </td>

                                                <td>
                                                    <%= category[i].slug %>
                                                </td>
                                                <td>
                                                    <%= category[i].is_listed==true?'Listed':'UnListed' %>
                                                </td>
                                                <td>
                                                    <a class="btn btn-sm font-sm rounded btn-brand" style="margin: 3px;" data-toggle="modal" data-target=".bd-example-modal-lg" onclick="loadOffers('<%= category[i]._id %>')">
                                                        Apply Offer
                                                      </a>
                                                      <% if(category[i].offer){ %>
                                                      <a class=" btn-sm font-sm btn-danger" style="margin: 3px;" onclick="removeOffer('<%= category[i]._id %>')">
                                                        Remove Offer
                                                      </a>
                                                      <%}%>
                                                </td>
                                                <td class="text-end">
                                                    <div class="dropdown">
                                                        <a href="#" data-bs-toggle="dropdown"
                                                            class="btn btn-light rounded btn-sm font-sm"> <i
                                                                class="material-icons md-more_horiz"></i> </a>
                                                        <div class="dropdown-menu">
                                                            <a class="dropdown-item"
                                                                onclick="confirmEdit('<%= category[i]._id %>')">Edit
                                                                info</a>
                                                                <a class="dropdown-item text-danger"
                                                                onclick="updateCategoryStatus('<%= category[i]._id %>', '<%= category[i].is_listed %>')"><%= category[i].is_listed==true?'UnList':'List' %></a>
                                                            <a class="dropdown-item text-danger"
                                                                onclick="confirmDelete('<%= category[i]._id %>')">Delete</a>
                                                        </div>
                                                    </div>
                                                    <!-- dropdown //end -->
                                                </td>
                                            </tr>
                                            <% } %>
                                                <% } else { %>
                                                    <tr>
                                                        <td colspan="5">categories not found</td>
                                                    </tr>
                                                    <% } %>
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <!-- .col// -->
                </div>
                <!-- .row // -->
            </div>
            <!-- card body .// -->
        </div>
        <!-- card .// -->
    </section>
    <!-- Modal -->
<div class="modal fade bd-example-modal-lg" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLongTitle" style="color: black;">Available Offers</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body" style="display: ruby;">
        
         </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  
    <!-- include jquery -->
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <!-- Include DataTables -->
    <script type="text/javascript" src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>
    <!-- <script src="/admin/sweetalert2/dist/sweetalert2.min.js"></script> -->

    <script>
        function loadOffers(categoryId) {
          fetch('/offer/getAllOffers')
            .then(response => {
              if (!response.ok) {
                throw new Error('Failed to fetch offers');
              }
              return response.json();
            })
            .then(data => {
              if (data.offerData && Array.isArray(data.offerData)) {
                displayOfferDataInModal(data.offerData,categoryId);
              } else {
                throw new Error('Invalid offer data format');
              }
            })
            .catch(error => {
              console.error('Error fetching data:', error);
              // Display error message if necessary
              Swal.fire({
                title: 'Error',
                text: 'Failed to fetch offers',
                icon: 'error'
              });
            });
        }
        function displayOfferDataInModal(offerData,categoryId) {
          // Access modal elements
          const modalBody = document.querySelector('.modal-body');
        
          // Clear existing content
          modalBody.innerHTML = '';
        
          // Loop through offerData and create HTML elements for each offer
          offerData.forEach(offer => {
            // Create a new row for each offer
            const row = document.createElement('div');
            row.classList.add('row', 'd-flex', 'justify-content-center', 'align-items-center','width:45%'); 
             row.style.width = '45%';
        
            // Create a column for the offer details
            const col = document.createElement('div');
            col.classList.add('col');
            col.style.margin = '5px';
            col.innerHTML = `
              <div class="card mb-3">
                <div class="card-body">
                  <h4 class="card-title">${offer.offerName}</h4>
                  <p class="card-text">Percentage: <span class="highlight" style="color:red"> ${offer.percentage} % </span></p>
                  <p class="card-text">Description: ${offer.description}</p>
                  <p class="card-text">Starting Date: <span class="highlight"> ${formatDate(offer.startingDate)}  </span></p>
                  <p class="card-text">Expiry Date: <span class="highlight"> ${formatDate(offer.expiryDate)}  </span></p>
                  <div class="text-center">
                    <button class="btn btn-primary" onclick="applyOffer('${offer._id}','${categoryId}')">Apply</button>
                    </div>
                </div>
              </div>
            `;
        
            // Append the column to the row
            row.appendChild(col);
        
            // Append the row to the modal body
            modalBody.appendChild(row);
          });
        }
        function formatDate(dateString) {
            const date = new Date(dateString);
            const year = date.getFullYear();
            let month = (1 + date.getMonth()).toString().padStart(2, '0');
            let day = date.getDate().toString().padStart(2, '0');
            return day + '-' + month + '-' + year;
        }
        function applyOffer(offerId,categoryId) {
            Swal.fire({
                title: 'Confirm',
                text: 'Are you sure you want to apply this offer?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Yes, apply it!'
            }).then((result) => {
                if (result.isConfirmed) {
                  $.ajax({
                    url:'/offer/applyToCategory',
                    method:'PUT',
                    data:{
                      offerId:offerId,
                      categoryId:categoryId
                    },
                    success: function(response){
                      Swal.fire({
                        title:'Success',
                        text:'Offer applied Successfully',
                        icon:'success'
                      })
                      .then(()=>{
                        location.reload();
                      })
                    },
                    error:function(xhr,status,error){
                      Swal.fire({
                        title:'Error',
                        text:'Failed to apply Offer',
                        icon:error
                      })
                    }
                  })
                }
            });
        }
            </script>
            <script>
              function removeOffer(categoryId){
                Swal.fire({
                title: 'Are you sure?',
                text: 'You are about to remove the offer. This action cannot be undone.',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, remove it!',
                cancelButtonText: 'Cancel'
            }).then((result) => {
                if (result.isConfirmed) {
                  $.ajax({
                url: '/offer/removeCategoryOffer',
                type: 'PUT',
                data: { categoryId: categoryId },
                success: function(response) {
                  Swal.fire({
                        icon: 'success',
                        title: 'Success!',
                        text: 'Offer has been successfully removed.',
                    })
                    .then(()=>{
                      location.reload();
                    })
                },
                error: function(xhr, status, error) {
                    console.error('Error removing offer:', error);
                }
            });
                }
            });
              }
            </script>

    <script>
function confirmDelete(categoryId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You are about to delete this category. Are you sure you want to proceed?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = "/admin/deleteCategory/" + categoryId;
        }
    });
}

function confirmEdit(categoryId) {
    Swal.fire({
        title: 'Are you sure?',
        text: 'You are about to edit this category. Are you sure you want to proceed?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, edit it!'
    }).then((result) => {
        if (result.isConfirmed) {
            window.location.href = "/admin/updateCategory/" + categoryId;
        }
    });
}


        function updateCategoryStatus(categoryId, currentStatus) {
    const newStatus = currentStatus === 'true' ? 'false' : 'true';

    fetch(`/admin/updateCategoryStatus/${categoryId}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({ is_listed: newStatus }),
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .then(data => {
        // Handle success
        window.location.reload()
        // Optionally, you can update the UI or perform additional actions
    })
    .catch(error => {
        // Handle error
        console.error('There was a problem with the fetch operation:', error);
    });
}
    </script>

<!-- Validation -->
<script>
    function validateField(fieldName, errorId, regex) {
        var fieldValue = $('#' + fieldName).val();
        var errorSpan = $('#' + errorId);

        if (fieldValue && fieldValue.startsWith(' ')) {
            errorSpan.text('Title should not start with a space.');
            return;
        }

        if (!regex.test(fieldValue)) {
            errorSpan.text('Title  must meet the validation criteria..');
        } else {
            errorSpan.text('');
        }
    }

    $('#title').on('input', function () {
        validateField('title', 'titleError', /^[a-zA-Z][a-zA-Z\s]{2,28}[a-zA-Z]$/);
    });

    function validateDescription(fieldName, errorId) {
        var fieldValue = $('#' + fieldName).val();
        var errorSpan = $('#' + errorId);

        if (fieldValue && fieldValue.startsWith(' ')) {
            errorSpan.text(fieldName + ' should not start with a space.');
            return;
        }

        var wordCount = fieldValue.trim().split(/\s+/).filter(function (word) {
            return word.length > 0;
        }).length;

        if (wordCount >= 5) {
            errorSpan.text('');
        } else {
            errorSpan.text(fieldName + ' should have more than 5 words.');
        }
    }

    $('#description').on('input', function () {
        validateField('description', 'descriptionError', /^[\s\S]{10,}$/);
    });



</script>


    <%- include('../layouts/adminLayout/_footer.ejs') -%>